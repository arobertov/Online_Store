# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: true
        bind:
            $paginator: '@knp_paginator'
            $request: '@request_stack'
    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'
    AppBundle\Repository\:
        resource: '../../src/AppBundle/Repository'
    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\Services\SendEmailService:
        arguments:
            $adminEmail: '%admin_email%'

    symfony.form.type_guesser.tree:
        class: Yavin\Symfony\Form\Type\TreeTypeGuesser
        arguments: [ "@doctrine" ]
        tags:
            - { name: form.type_guesser }

    AppBundle\Services\UserServiceInterface:
        alias: 'AppBundle\Services\UserService'
        public: false

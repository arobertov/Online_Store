<?php

namespace ShopBundle\Repository;

use Doctrine\ORM\EntityManagerInterface;
use ShopBundle\Entity\ClientOrder;
use Doctrine\ORM\Mapping;

/**
 * ClientOrderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClientOrderRepository extends \Doctrine\ORM\EntityRepository
{
	/**
	 * @var EntityManagerInterface $em
	 */
	private $em;

	/**
	 * CategoryRepository constructor.
	 *
	 * @param EntityManagerInterface $em
	 */
	public function __construct( EntityManagerInterface $em ) {
		parent::__construct( $em, new Mapping\ClassMetadata(ClientOrder::class) );
		$this->em = $em;
	}

	/**
	 * @param ClientOrder $order
	 *
	 * @return string
	 * @throws \Exception
	 */
	public function addOrder(ClientOrder $order){
		try{
			$this->em->persist($order);
			$this->em->flush();
			return 'Your Order create successful !';
		} catch (\Exception $e){
			throw new \Exception($e->getMessage());
		}
	}

	/**
	 * @return mixed
	 * @throws \Exception
	 */
	public function findAllOrders(){
		try{
			$em = $this->em;
			$query = $em->createQueryBuilder()
			            ->select('co','pp','us')
			            ->from('ShopBundle:ClientOrder','co')
			            ->join('co.purchaseProducts','pp')
			            ->leftJoin('co.user','us')
			            ->orderBy('co.dateCreated','DESC')
			            ->getQuery();
			return $query->getResult();
		} catch (\Exception $e){
			 throw new \Exception($e->getMessage());
		}
	}
}
